{
  "text_kwargs": [
    "agg_filter: Callable[[NumericArray, int], NumericArray] = ...",
    "alpha: Optional[float] = ...",
    "animated: Optional[bool] = ...",
    "antialiased: Optional[bool] = ...",
    "bbox: Optional[Dict[str, Union[str, float]]] = ...",
    "clip_box: Optional[Bbox] = ...",
    "clip_on: Optional[bool] = ...",
    "clip_path: Optional[Callable[[Path, Transform], None]] = ...",
    "color: Optional[str] = ...",
    "c: Optional[str] = ...",
    "contains: Optional[Callable[[Artist, MouseEvent], Tuple[Tuple[bool, dict]]]] = ...",
    "figure: Optional[Figure] = ...",
    "fontfamily: Optional[Union[str, List[str]]] = ...",
    "family: Optional[Union[str, List[str]]] = ...",
    "fontproperties: Optional[FontProperties] = ...",
    "font_properties: Optional[FontProperties] = ...",
    "fontsize: Optional[Union[Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], int]] = ...",
    "size: Optional[Union[Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], int]] = ...",
    "fontstretch: Optional[Union[int, Literal['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded']]] = ...",
    "stretch: Optional[Union[int, Literal['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded']]] = ...",
    "fontstyle: Optional[Literal['normal', 'italic', 'oblique']] = ...",
    "style: Optional[Literal['normal', 'italic', 'oblique']] = ...",
    "fontvariant: Optional[Literal['normal', 'small-caps']] = ...",
    "variant: Optional[Literal['normal', 'small-caps']] = ...",
    "fontweight: Optional[Union[float, Literal['ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black']]] = ...",
    "weight: Optional[Union[float, Literal['ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black']]] = ...",
    "gid: Optional[str] = ...",
    "horizontalalignment: Literal['center', 'right', 'left'] = ...",
    "ha: Literal['center', 'right', 'left'] = ...",
    "in_layout: Optional[bool] = ...",
    "linespacing: Optional[float] = ...",
    "multialignment: Literal['left', 'right', 'center'] = ...",
    "ma: Literal['left', 'right', 'center'] = ...",
    "path_effect: Optional[AbstractPathEffect] = ...",
    "picker: Optional[float] = ...",
    "pickradius: float = ...",
    "rasterized: Optional[bool] = ...",
    "sketch_params: Dict[str, Optional[float]] = ...",
    "snap: Optional[bool] = ...",
    "url: Optional[str] = ...",
    "usetext: Optional[bool] = ...",
    "verticalalignment: Literal['center', 'top', 'bottom', 'baseline', 'center_baseline'] = ...",
    "va: Literal['center', 'top', 'bottom', 'baseline', 'center_baseline'] = ...",
    "visible: Optional[bool] = ...",
    "wrap: bool = ...",
    "x: Optional[float] = ...",
    "y: Optional[float] = ...",
    "zorder: Optional[float] = ..."
  ],

  "line2d_kwargs": [
    "agg_filter: Callable[[NumericArray, int], NumericArray] = ...",
    "alpha: Optional[float] = ...",
    "animated: Optional[bool] = ...",
    "antialiased: Optional[bool] = ...",
    "aa: Optional[bool] = ...",
    "clip_box: Optional[Bbox] = ...",
    "clip_on: Optional[bool] = ...",
    "clip_path: Optional[Callable[[Path, Transform], None]] = ...",
    "color: Optional[str] = ...",
    "c: Optional[str] = ...",
    "contains: Optional[Callable[[Artist, MouseEvent], Tuple[bool, dict]]] = ...",
    "dash_capstyle: Optional[Literal['butt', 'round', 'projecting']] = ...",
    "dash_jointstyle: Optional[Literal['miter', 'round', 'bevel']] = ...",
    "dashes: Optional[Union[Sequence[float], Tuple[None, None]]] = ...",
    "drawstyle: Literal['default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'] = ...",
    "ds: Literal['default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'] = ...",
    "figure: Optional[Figure] = ...",
    "fillstyle: Literal['full', 'left', 'right', 'bottom', 'top', 'none'] = ...",
    "gid: Optional[str] = ...",
    "in_layout: Optional[bool] = ...",
    "label: object = ...",
    "linestyle: Optional[Literal['-', '--', '-.', ':', '']] = ...",
    "ls: Optional[Literal['-', '--', '-.', ':', '']] = ...",
    "linewidth: Optional[float] = ...",
    "lw: Optional[float] = ...",
    "marker: Optional[str] = ...",
    "markeredgecolor: Optional[str] = ...",
    "mec: Optional[str] = ...",
    "markeredgewidth: Optional[float] = ...",
    "mew: Optional[float] = ...",
    "markerfacecolor: Optional[str] = ...",
    "mfc: Optional[str] = ...",
    "markerfacecoloralt: Optional[str] = ...",
    "mfcalt: Optional[str] = ...",
    "markersize: Optional[float] = ...",
    "ms: Optional[float] = ...",
    "markevery: Optional[Union[int, Tuple[int, int], slice, List[int], float, Tuple[float, float]]] = ...",
    "path_effect: Optional[AbstractPathEffect] = ...",
    "picker: Optional[float] = ...",
    "pickradius: float = ...",
    "rasterized: Optional[bool] = ...",
    "sketch_params: Dict[str, Optional[float]] = ...",
    "snap: Optional[bool] = ...",
    "solid_capstyle: Optional[Literal['butt', 'round', 'projecting']] = ...",
    "url: Optional[str] = ...",
    "visible: Optional[bool] = ...",
    "xdata: Optional[NumericArray] = ...",
    "ydata: Optional[NumericArray] = ...",
    "zorder: Optional[float] = ..."
  ]
}

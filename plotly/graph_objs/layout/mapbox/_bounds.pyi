"""
This type stub file was generated by pyright.
"""

from plotly.basedatatypes import BaseLayoutHierarchyType as _BaseLayoutHierarchyType

class Bounds(_BaseLayoutHierarchyType):
    _parent_path_str = ...
    _path_str = ...
    _valid_props = ...
    @property
    def east(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the maximum longitude of the map (in degrees East) if
        `west`, `south` and `north` are declared.

        The 'east' property is a number and may be specified as:
          - An int or float

        Returns
        -------
        int|float
        """
        ...
    
    @east.setter
    def east(self, val): # -> None:
        ...
    
    @property
    def north(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the maximum latitude of the map (in degrees North) if
        `east`, `west` and `south` are declared.

        The 'north' property is a number and may be specified as:
          - An int or float

        Returns
        -------
        int|float
        """
        ...
    
    @north.setter
    def north(self, val): # -> None:
        ...
    
    @property
    def south(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the minimum latitude of the map (in degrees North) if
        `east`, `west` and `north` are declared.

        The 'south' property is a number and may be specified as:
          - An int or float

        Returns
        -------
        int|float
        """
        ...
    
    @south.setter
    def south(self, val): # -> None:
        ...
    
    @property
    def west(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the minimum longitude of the map (in degrees East) if
        `east`, `south` and `north` are declared.

        The 'west' property is a number and may be specified as:
          - An int or float

        Returns
        -------
        int|float
        """
        ...
    
    @west.setter
    def west(self, val): # -> None:
        ...
    
    def __init__(self, arg=..., east=..., north=..., south=..., west=..., **kwargs) -> None:
        """
        Construct a new Bounds object

        Parameters
        ----------
        arg
            dict of properties compatible with this constructor or
            an instance of
            :class:`plotly.graph_objs.layout.mapbox.Bounds`
        east
            Sets the maximum longitude of the map (in degrees East)
            if `west`, `south` and `north` are declared.
        north
            Sets the maximum latitude of the map (in degrees North)
            if `east`, `west` and `south` are declared.
        south
            Sets the minimum latitude of the map (in degrees North)
            if `east`, `west` and `north` are declared.
        west
            Sets the minimum longitude of the map (in degrees East)
            if `east`, `south` and `north` are declared.

        Returns
        -------
        Bounds
        """
        ...
    


